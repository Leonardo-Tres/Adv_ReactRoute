{"ast":null,"code":"var _jsxFileName = \"/Users/leonardo/Desktop/Dev/React Udemy course/p13_adv_ReactRoute/frontend/src/pages/NewEventPage.js\";\nimport { redirect, json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport const action = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  console.log('OK');\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not submit this event'\n    }, {\n      status: 500\n    });\n  } else {\n    return redirect('/events');\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["redirect","json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","console","log","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/Users/leonardo/Desktop/Dev/React Udemy course/p13_adv_ReactRoute/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { redirect, json } from \"react-router-dom\"\nimport EventForm from \"../components/EventForm\"\n\nconst NewEventPage = () => {\n    return <EventForm/>\n}\n\nexport default NewEventPage\n\nexport const action = async ({request, params}) => {\n    const data = await request.formData()\n    console.log('OK')\n\n    const eventData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        date: data.get('date'),\n        description: data.get('description')\n    }\n\n    const response = await fetch('http://localhost:8080/events', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(eventData)\n    })\n\n    if (!response.ok) {\n        throw json({message: 'Could not submit this event'}, {status: 500})\n    } else {\n        return redirect('/events')\n    }\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,IAAI,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvB,CAAC;AAAAC,EAAA,GAFKL,YAAY;AAIlB,eAAeA,YAAY;AAE3B,OAAO,MAAMM,MAAM,GAAG,MAAAC,IAAA,IAA6B;EAAA,IAAtB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC1C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EAEjB,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEL,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEP,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAER,IAAI,CAACM,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAET,IAAI,CAACM,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM/B,IAAI,CAAC;MAACgC,OAAO,EAAE;IAA6B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACvE,CAAC,MAAM;IACH,OAAOlC,QAAQ,CAAC,SAAS,CAAC;EAC9B;AACJ,CAAC;AAAA,IAAAU,EAAA;AAAAyB,YAAA,CAAAzB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/leonardo/Desktop/Dev/React Udemy course/p13_adv_ReactRoute/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch event details'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/leonardo/Desktop/Dev/React Udemy course/p13_adv_ReactRoute/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useRouteLoaderData, json } from \"react-router-dom\"\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetailPage = () => {\n    const data = useRouteLoaderData('event-detail')\n\n    return <EventItem event={data.event}/>\n}\n\nexport default EventDetailPage\n\nexport const loader = async ({request, params}) => {\n    const id = params.eventId\n\n    const response = await fetch('http://localhost:8080/events/' + id)\n\n    if (!response.ok) {\n        throw json({message: 'Could not fetch event details'}, {status: 500})\n    } else {\n        return response\n    }\n}"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOI,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C,CAAC;AAAAN,EAAA,CAJKD,eAAe;EAAA,QACJL,kBAAkB;AAAA;AAAAa,EAAA,GAD7BR,eAAe;AAMrB,eAAeA,eAAe;AAE9B,OAAO,MAAMS,MAAM,GAAG,MAAAC,IAAA,IAA6B;EAAA,IAAtB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC1C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAE;IAA+B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACzE,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ,CAAC;AAAA,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}